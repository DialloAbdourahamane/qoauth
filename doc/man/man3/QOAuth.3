.TH "QOAuth" 3 "31 Jul 2009" "Version 0.1.0" "QOAuth" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QOAuth \- This namespace encapsulates all classes and definitions provided by libqoauth.  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBQOAuth\fP"
.br
.RI "\fIThis class provides means for interaction with network services supporting OAuth authorization scheme. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef QMultiMap< QByteArray, QByteArray > \fBParamMap\fP"
.br
.RI "\fIA typedef for the data structure for storing request parameters. \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBSignatureMethod\fP { \fBHMAC_SHA1\fP, \fBRSA_SHA1\fP, \fBPLAINTEXT\fP }"
.br
.RI "\fIThis enum type describes the signature method used by the request. \fP"
.ti -1c
.RI "enum \fBHttpMethod\fP { \fBGET\fP, \fBPOST\fP, \fBHEAD\fP, \fBPUT\fP, \fBDELETE\fP }"
.br
.RI "\fIThis enum type specifies the HTTP method used for creating a \fCSignature Base String\fP and/or sending a request. \fP"
.ti -1c
.RI "enum \fBParsingMode\fP { \fBParseForRequestContent\fP, \fBParseForInlineQuery\fP, \fBParseForHeaderArguments\fP, \fBParseForSignatureBaseString\fP }"
.br
.RI "\fIThis enum type specifies the method of parsing parameters into a parameter string. \fP"
.ti -1c
.RI "enum \fBErrorCode\fP { \fBNoError\fP =  200, \fBBadRequest\fP =  400, \fBUnauthorized\fP =  401, \fBForbidden\fP =  403, \fBTimeout\fP =  1, \fBConsumerKeyEmpty\fP, \fBConsumerSecretEmpty\fP, \fBUnsupportedSignatureMethod\fP, \fBUnsupportedHttpMethod\fP, \fBOtherError\fP }"
.br
.RI "\fIThis enum type defines error types that are assigned to the \fBQOAuth::QOAuth::error\fP property. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "QByteArray \fBsupportedOAuthVersion\fP ()"
.br
.RI "\fIReturns the supported OAuth protocol version. \fP"
.ti -1c
.RI "QByteArray \fBtokenParameterName\fP ()"
.br
.RI "\fIReturns the name of the Access Token argument parameter. \fP"
.ti -1c
.RI "QByteArray \fBtokenSecretParameterName\fP ()"
.br
.RI "\fIReturns the name of the Token Secret argument parameter. \fP"
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBQOAuth::ErrorCode\fP"
.PP
This error codes collection contains both network-related errors and those that can occur when incorrect arguments are provided to any of the class's methods.
.PP
\fBSee also:\fP
.RS 4
\fBQOAuth::QOAuth::error\fP 
.RE
.PP

.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fINoError \fP\fP
No error occured (so far :-) ). 
.TP
\fB\fIBadRequest \fP\fP
Represents HTTP status code \fC400\fP (Bad Request). 
.TP
\fB\fIUnauthorized \fP\fP
Represents HTTP status code \fC401\fP (Unauthorized). 
.TP
\fB\fIForbidden \fP\fP
Represents HTTP status code \fC403\fP (Forbidden). 
.TP
\fB\fITimeout \fP\fP
Represents a request timeout error. 
.TP
\fB\fIConsumerKeyEmpty \fP\fP
Consumer key has not been provided. 
.TP
\fB\fIConsumerSecretEmpty \fP\fP
Consumer secret has not been provided. 
.TP
\fB\fIUnsupportedSignatureMethod \fP\fP
The signature method is not supported by the library. 
.TP
\fB\fIUnsupportedHttpMethod \fP\fP
The HTTP method is not supported by the request. Note that \fBQOAuth::QOAuth::requestToken()\fP and \fBQOAuth::QOAuth::accessToken()\fP accept only HTTP GET and POST requests. 
.TP
\fB\fIOtherError \fP\fP
A network-related error not specified above. 
.SS "enum \fBQOAuth::HttpMethod\fP"
.PP
The HTTP method has to be specified in \fBQOAuth\fP class for two reasons: 
.PD 0

.IP "\(bu" 2
to know what type of request should be prepared and sent (\fBQOAuth::QOAuth::requestToken()\fP and \fBQOAuth::QOAuth::accessToken()\fP), 
.IP "\(bu" 2
to prepare a correct signature, as the Signature Base String contains a parameter specifying the HTTP method used for request (\fBQOAuth::QOAuth::createParametersString()\fP).
.PP
\fBNote:\fP
.RS 4
For \fBQOAuth::QOAuth::requestToken()\fP and \fBQOAuth::QOAuth::accessToken()\fP methods only \fBGET\fP and \fBPOST\fP methods are allowed. 
.RE
.PP

.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIGET \fP\fP
Sets the HTTP method to GET. 
.TP
\fB\fIPOST \fP\fP
Sets the HTTP method to POST. 
.TP
\fB\fIHEAD \fP\fP
Sets the HTTP method to HEAD. 
.TP
\fB\fIPUT \fP\fP
Sets the HTTP method to PUT. 
.TP
\fB\fIDELETE \fP\fP
Sets the HTTP method to DELETE. 
.SS "enum \fBQOAuth::ParsingMode\fP"
.PP
When creating a parameters string for a custom request using \fBQOAuth::QOAuth::createParametersString()\fP the parsing mode must be defined in order to prepare the string correctly.
.PP
According to what is stated in \fCOAuth 1.0 Core specification\fP, parameters can be passed in a request to the Service Provider in 3 different ways. When using \fBQOAuth::QOAuth::createParametersString()\fP, choose the one that suits you by setting \fIParsingMode\fP appropriatelly.
.PP
\fBSee also:\fP
.RS 4
\fBQOAuth::QOAuth::createParametersString()\fP 
.RE
.PP

.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIParseForRequestContent \fP\fP
Inline query format (\fCfoo=bar&bar=baz&baz=foo ...\fP), suitable for POST requests. 
.TP
\fB\fIParseForInlineQuery \fP\fP
Same as ParseForRequestContent, but prepends the string with a question mark
.IP "\(bu" 2
suitable for GET requests (appending parameters to the request URL) 
.PP

.TP
\fB\fIParseForHeaderArguments \fP\fP
HTTP request header format (parameters to be put inside a request header). 
.TP
\fB\fIParseForSignatureBaseString \fP\fP
\fCSignature Base String\fP format, meant for internal use. 
.SS "enum \fBQOAuth::SignatureMethod\fP"
.PP
There are 3 different signature methods defined by the \fCOAuth protocol\fP. This enum is used to specify the method used by a specific request. Hence, one of its values must be passed as a parameter in any of the \fBQOAuth::QOAuth::requestToken()\fP, \fBQOAuth::QOAuth::accessToken()\fP or \fBQOAuth::QOAuth::createParametersString()\fP method.
.PP
\fBNote:\fP
.RS 4
The current implementation of the library supports only HMAC-SHA1 signature algorithm. 
.RE
.PP

.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIHMAC_SHA1 \fP\fP
Sets the signature method to HMAC-SHA1. 
.TP
\fB\fIRSA_SHA1 \fP\fP
Sets the signature method to RSA-SHA1 (not implemented yet). 
.TP
\fB\fIPLAINTEXT \fP\fP
Sets the signature method to PLAINTEXT (not implemented yet). 
.SH "Function Documentation"
.PP 
.SS "QByteArray QOAuth::tokenParameterName ()"
.PP
Useful when reading Service Provider's reply for \fBQOAuth::QOAuth::accessToken()\fP request, e.g: 
.PP
.nf
      QOAuth::QOAuth qoauth;
      QByteArray requestToken = 'token';
      QByteArray requestTokenSecret = 'secret';
      QOAuth::ParamMap reply = qoauth.accessToken( 'http://example.com/access_token', QOAuth::POST,
                          token, tokenSecret, QOAuth::HMAC_SHA1 );

      if ( qoauth.error() == QOAuth::NoError ) {
        token = reply.value( QOAuth::tokenParameterName() );
        tokenSecret = reply.value( QOAuth::tokenSecretParameterName() );
      }

.fi
.PP
 
.SS "QByteArray QOAuth::tokenSecretParameterName ()"
.PP
\fBSee also:\fP
.RS 4
\fBQOAuth::tokenParameterName()\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for QOAuth from the source code.
